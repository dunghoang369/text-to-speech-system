apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: text-to-speech-serving-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.3, pipelines.kubeflow.org/pipeline_compilation_time: '2024-03-29T15:49:06.189911',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "send requests to tts models
      and get response audio.", "inputs": [{"name": "data_url"}], "name": "text to
      speech serving"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.3}
spec:
  entrypoint: text-to-speech-serving
  templates:
  - name: load-data
    container:
      args: [--data-url, '{{inputs.parameters.data_url}}', --data-serving, /tmp/outputs/data_serving/data]
      command:
      - sh
      - -c
      - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
        'joblib==1.1.0' 'wget==3.2' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m
        pip install --quiet --no-warn-script-location 'joblib==1.1.0' 'wget==3.2'
        --user) && "$0" "$@"
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - |
        def _make_parent_dirs_and_return_path(file_path: str):
            import os
            os.makedirs(os.path.dirname(file_path), exist_ok=True)
            return file_path

        def load_data(
            data_url,
            data_serving_path,
        ):
            import wget
            import joblib

            # Download sentences.txt to local
            wget.download(data_url)

            # Load data file
            with open("sentences.txt", "r") as f:
                sentences = f.readlines()

            sentences = [sentence.strip() for sentence in sentences]

            # Dump data to pkl for downstream components to use
            joblib.dump(sentences, data_serving_path)

            print(sentences)

        import argparse
        _parser = argparse.ArgumentParser(prog='Load data', description='')
        _parser.add_argument("--data-url", dest="data_url", type=str, required=True, default=argparse.SUPPRESS)
        _parser.add_argument("--data-serving", dest="data_serving_path", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
        _parsed_args = vars(_parser.parse_args())

        _outputs = load_data(**_parsed_args)
      image: python:3.7
    inputs:
      parameters:
      - {name: data_url}
    outputs:
      artifacts:
      - {name: load-data-data_serving, path: /tmp/outputs/data_serving/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.3
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["--data-url", {"inputValue": "data_url"}, "--data-serving", {"outputPath":
          "data_serving"}], "command": ["sh", "-c", "(PIP_DISABLE_PIP_VERSION_CHECK=1
          python3 -m pip install --quiet --no-warn-script-location ''joblib==1.1.0''
          ''wget==3.2'' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install
          --quiet --no-warn-script-location ''joblib==1.1.0'' ''wget==3.2'' --user)
          && \"$0\" \"$@\"", "sh", "-ec", "program_path=$(mktemp)\nprintf \"%s\" \"$0\"
          > \"$program_path\"\npython3 -u \"$program_path\" \"$@\"\n", "def _make_parent_dirs_and_return_path(file_path:
          str):\n    import os\n    os.makedirs(os.path.dirname(file_path), exist_ok=True)\n    return
          file_path\n\ndef load_data(\n    data_url,\n    data_serving_path,\n):\n    import
          wget\n    import joblib\n\n    # Download sentences.txt to local\n    wget.download(data_url)\n\n    #
          Load data file\n    with open(\"sentences.txt\", \"r\") as f:\n        sentences
          = f.readlines()\n\n    sentences = [sentence.strip() for sentence in sentences]\n\n    #
          Dump data to pkl for downstream components to use\n    joblib.dump(sentences,
          data_serving_path)\n\n    print(sentences)\n\nimport argparse\n_parser =
          argparse.ArgumentParser(prog=''Load data'', description='''')\n_parser.add_argument(\"--data-url\",
          dest=\"data_url\", type=str, required=True, default=argparse.SUPPRESS)\n_parser.add_argument(\"--data-serving\",
          dest=\"data_serving_path\", type=_make_parent_dirs_and_return_path, required=True,
          default=argparse.SUPPRESS)\n_parsed_args = vars(_parser.parse_args())\n\n_outputs
          = load_data(**_parsed_args)\n"], "image": "python:3.7"}}, "inputs": [{"name":
          "data_url", "type": "String"}], "name": "Load data", "outputs": [{"name":
          "data_serving", "type": "PKL"}]}', pipelines.kubeflow.org/component_ref: '{}',
        pipelines.kubeflow.org/arguments.parameters: '{"data_url": "{{inputs.parameters.data_url}}"}'}
  - name: serving
    container:
      args: [--data-serving, /tmp/inputs/data_serving/data]
      command:
      - sh
      - -c
      - (PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
        'joblib==1.1.0' 'requests==2.31.0' || PIP_DISABLE_PIP_VERSION_CHECK=1 python3
        -m pip install --quiet --no-warn-script-location 'joblib==1.1.0' 'requests==2.31.0'
        --user) && "$0" "$@"
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - |
        def serving(
            data_serving_path,
        ):
            import joblib
            import requests

            headers = {
            "Content-Type": "application/json"}

            # Define our data for prediction
            sentences = joblib.load(data_serving_path)
            for sentence in sentences:
                json_data = {"Text": sentences[0]}
                response = requests.post('http://tts.kserve-deployment.34.170.87.225.sslip.io/predict', json=json_data)
                status = requests.post('https://f189-27-77-246-74.ngrok-free.app/process', json=response.json(), headers=headers)
                print(status)

        import argparse
        _parser = argparse.ArgumentParser(prog='Serving', description='')
        _parser.add_argument("--data-serving", dest="data_serving_path", type=str, required=True, default=argparse.SUPPRESS)
        _parsed_args = vars(_parser.parse_args())

        _outputs = serving(**_parsed_args)
      image: python:3.7
    inputs:
      artifacts:
      - {name: load-data-data_serving, path: /tmp/inputs/data_serving/data}
    metadata:
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.3
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
      annotations: {pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["--data-serving", {"inputPath": "data_serving"}], "command": ["sh",
          "-c", "(PIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location
          ''joblib==1.1.0'' ''requests==2.31.0'' || PIP_DISABLE_PIP_VERSION_CHECK=1
          python3 -m pip install --quiet --no-warn-script-location ''joblib==1.1.0''
          ''requests==2.31.0'' --user) && \"$0\" \"$@\"", "sh", "-ec", "program_path=$(mktemp)\nprintf
          \"%s\" \"$0\" > \"$program_path\"\npython3 -u \"$program_path\" \"$@\"\n",
          "def serving(\n    data_serving_path,\n):\n    import joblib\n    import
          requests\n\n    headers = {\n    \"Content-Type\": \"application/json\"}\n\n    #
          Define our data for prediction\n    sentences = joblib.load(data_serving_path)\n    for
          sentence in sentences:\n        json_data = {\"Text\": sentences[0]}\n        response
          = requests.post(''http://tts.kserve-deployment.34.170.87.225.sslip.io/predict'',
          json=json_data)\n        status = requests.post(''https://f189-27-77-246-74.ngrok-free.app/process'',
          json=response.json(), headers=headers)\n        print(status)\n\nimport
          argparse\n_parser = argparse.ArgumentParser(prog=''Serving'', description='''')\n_parser.add_argument(\"--data-serving\",
          dest=\"data_serving_path\", type=str, required=True, default=argparse.SUPPRESS)\n_parsed_args
          = vars(_parser.parse_args())\n\n_outputs = serving(**_parsed_args)\n"],
          "image": "python:3.7"}}, "inputs": [{"name": "data_serving", "type": "PKL"}],
          "name": "Serving"}', pipelines.kubeflow.org/component_ref: '{}'}
  - name: text-to-speech-serving
    inputs:
      parameters:
      - {name: data_url}
    dag:
      tasks:
      - name: load-data
        template: load-data
        arguments:
          parameters:
          - {name: data_url, value: '{{inputs.parameters.data_url}}'}
      - name: serving
        template: serving
        dependencies: [load-data]
        arguments:
          artifacts:
          - {name: load-data-data_serving, from: '{{tasks.load-data.outputs.artifacts.load-data-data_serving}}'}
  arguments:
    parameters:
    - {name: data_url}
  serviceAccountName: pipeline-runner
